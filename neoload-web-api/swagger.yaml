swagger: '2.0'
info:
  version: '1.0'
  title: NeoLoad API
basePath: /v1
consumes:
  - application/json
produces:
  - application/json
paths:
  /tests:
    get:
      operationId: GetTests
      summary: List test results
      description: List the test results of the account corresponding to the parameters.
      tags:
        - Results
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: status
          in: query
          required: false
          type: string
          description: >-
            Return only the test with the specified status. Available status
            are: STARTING, RUNNING, TERMINATED.
        - name: project
          in: query
          required: false
          type: string
          description: Project name. Return only the tests of the specified project.
        - name: author
          in: query
          required: false
          type: string
          description: >-
            The author of the test. Return only the tests launched by the
            specified author.
        - name: limit
          in: query
          required: false
          type: integer
          default: 50
          maximum: 200
          description: The maximum number of test results returned by this call.
        - name: offset
          in: query
          required: false
          type: integer
          default: 0
          description: >-
            The offset of the first test to return. Starting at this offset the
            query will return a maximum of 'limit' tests.
        - name: fields
          in: query
          required: false
          type: string
          description: >-
            Comma separated list of fields to include in the json test
            definition.
        - name: pretty
          in: query
          required: false
          type: boolean
          description: If true the Json returned is human readable.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ArrayOfTestDefinition'
          headers:
            Access-Control-Allow-Origin:
              type: string
        '400':
          description: >-
            An error occurs while processing the request. Please verify the
            parameters and try again.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized. You must provide an API token.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            You are not allowed to process this request. Please verify the
            parameters and try again.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Resource not found. Please verify the parameters and try again.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
  '/tests/{testId}':
    get:
      operationId: GetTest
      summary: Test result description
      description: >-
        Provide a test result description using a unique test identifier.
        Provide name, dates, owner ...
      tags:
        - Results
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: testId
          in: path
          required: true
          type: string
          description: Unique identifier representing a specific test.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TestDefinition'
          headers:
            Access-Control-Allow-Origin:
              type: string
        '400':
          description: >-
            An error occurs while processing the request. Please verify the
            parameters and try again.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized. You must provide an API token.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            You are not allowed to process this request. Please verify the
            parameters and try again.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Resource not found. Please verify the parameters and try again.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
  '/tests/{testId}/statistics':
    get:
      operationId: GetTestStatistics
      summary: Test result main statistics
      description: >-
        Provide the main statistics of a test result. For a runnning test, these
        statistics are live, for a finished test, those are average for the all
        test.
      tags:
        - Results
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: testId
          in: path
          required: true
          type: string
          description: Unique identifier representing a specific test.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TestStatistics'
          headers:
            Access-Control-Allow-Origin:
              type: string
        '400':
          description: >-
            An error occurs while processing the request. Please verify the
            parameters and try again.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized. You must provide an API token.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            You are not allowed to process this request. Please verify the
            parameters and try again.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Resource not found. Please verify the parameters and try again.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
  '/tests/{testId}/elements':
    get:
      operationId: GetTestElements
      summary: Test elements
      description: >-
        Provide the tests elements of a test result. The elements type must be
        provided.
      tags:
        - Results
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: testId
          in: path
          required: true
          type: string
          description: Unique identifier representing a specific test.
        - name: category
          in: query
          required: true
          type: string
          description: >-
            Category of the elements to return. Available categories are:
            TRANSACTION, PAGE, REQUEST.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ElementDefinitions'
          headers:
            Access-Control-Allow-Origin:
              type: string
        '400':
          description: >-
            An error occurs while processing the request. Please verify the
            parameters and try again.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized. You must provide an API token.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            You are not allowed to process this request. Please verify the
            parameters and try again.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Resource not found. Please verify the parameters and try again.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
  '/tests/{testId}/elements/{elementId}/values':
    get:
      operationId: GetTestElementsValues
      summary: Test elements values
      description: Provide the values of a test element.
      tags:
        - Results
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: testId
          in: path
          required: true
          type: string
          description: Unique identifier representing a specific test.
        - name: elementId
          in: path
          required: true
          type: string
          description: Unique identifier representing a specific element.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ElementValues'
          headers:
            Access-Control-Allow-Origin:
              type: string
        '400':
          description: >-
            An error occurs while processing the request. Please verify the
            parameters and try again.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized. You must provide an API token.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            You are not allowed to process this request. Please verify the
            parameters and try again.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Resource not found. Please verify the parameters and try again.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
  '/tests/{testId}/elements/{elementId}/points':
    get:
      operationId: GetTestElementsPoints
      summary: Test elements points since the beginning of the test
      description: Provide all the ponits of a test element for the selected statistics.
      tags:
        - Results
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: testId
          in: path
          required: true
          type: string
          description: Unique identifier representing a specific test.
        - name: elementId
          in: path
          required: true
          type: string
          description: Unique identifier representing a specific element.
        - name: statistics
          in: query
          required: true
          type: string
          description: >-
            Comma separated list of statistics to get. Available statistics are:
            AVG_DURATION, MIN_DURATION, MAX_DURATION, COUNT, THROUGHPUT,
            ELEMENTS_PER_SECOND, ERRORS, ERRORS_PER_SECOND, ERROR_RATE,
            AVG_TTFB, MIN_TTFB, MAX_TTFB
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Points'
          headers:
            Access-Control-Allow-Origin:
              type: string
        '400':
          description: >-
            An error occurs while processing the request. Please verify the
            parameters and try again.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized. You must provide an API token.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            You are not allowed to process this request. Please verify the
            parameters and try again.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Resource not found. Please verify the parameters and try again.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
  '/tests/{testId}/monitors':
    get:
      operationId: GetTestMonitors
      summary: Test monitors
      description: Provide all the tests counters of all monitors for a test result.
      tags:
        - Results
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: testId
          in: path
          required: true
          type: string
          description: Unique identifier representing a specific test.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CounterDefinition'
          headers:
            Access-Control-Allow-Origin:
              type: string
        '400':
          description: >-
            An error occurs while processing the request. Please verify the
            parameters and try again.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized. You must provide an API token.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            You are not allowed to process this request. Please verify the
            parameters and try again.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Resource not found. Please verify the parameters and try again.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
  '/tests/{testId}/monitors/{counterId}/values':
    get:
      operationId: GetTestMonitorsValues
      summary: Test monitors values
      description: Provide the values of a test counter.
      tags:
        - Results
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: testId
          in: path
          required: true
          type: string
          description: Unique identifier representing a specific test.
        - name: counterId
          in: path
          required: true
          type: string
          description: Unique identifier representing a specific counter.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CounterValues'
          headers:
            Access-Control-Allow-Origin:
              type: string
        '400':
          description: >-
            An error occurs while processing the request. Please verify the
            parameters and try again.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized. You must provide an API token.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            You are not allowed to process this request. Please verify the
            parameters and try again.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Resource not found. Please verify the parameters and try again.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
securityDefinitions:
  NeoloadAuthorizer:
    type: apiKey
    name: accountToken
    in: header
security:
  - NeoloadAuthorizer: []
parameters:
  test_id:
    name: testId
    in: path
    required: true
    type: string
    description: Unique identifier representing a specific test.
definitions:
  Empty:
    type: object
    title: Empty Schema
  TestDefinition:
    type: object
    properties:
      id:
        type: string
        description: Unique identifier of the test.
      name:
        type: string
        description: Name of the test.
      description:
        type: string
        description: Description of the test.
      author:
        type: string
        description: First and Last name of the person who launched the test.
      terminationReason:
        type: string
        description: >-
          Reason that caused the test to end. It can be: POLICY, VARIABLE,
          MANUAL, LG_AVAILABILITY, LICENSE, UNKNOWN.
      lgCount:
        type: integer
        description: Total number of Load Generators used in the test.
      project:
        type: string
        description: Name of the project.
      scenario:
        type: string
        description: Name of the scenario.
      status:
        type: string
        description: 'Status of the test. It can be: STARTING, RUNNING, TERMINATED, UNKNOWN.'
      qualityStatus:
        type: string
        description: >-
          Quality status of the test. It can be: PASSED, FAILED, COMPUTING,
          UNKNOWN.
      startDate:
        type: integer
        format: int64
        description: Timestamp when the test started.
      endDate:
        type: integer
        format: int64
        description: Timestamp when the test ended.
      duration:
        type: integer
        format: int64
        description: Test duration in seconds.
  TestStatistics:
    type: object
    properties:
      totalRequestCountSuccess:
        type: integer
        format: int64
        description: >-
          Total number of requests in the scenario that did not encounter any
          error.
      totalRequestCountFailure:
        type: integer
        format: int64
        description: Total number of requests in the scenario that encountered errors.
      totalRequestDurationAverage:
        type: number
        format: float
        description: >-
          Average time in seconds for all requests of the scenario to be
          performed (from first byte sent to last byte received).
      totalRequestCountPerSecond:
        type: number
        format: float
        description: >-
          Total number of requests in the scenario that are performed per
          second.
      totalTransactionCountSuccess:
        type: integer
        format: int64
        description: >-
          Total number of the scenario's Transactions executed without
          encountering any error.
      totalTransactionCountFailure:
        type: integer
        format: int64
        description: Total number of the scenario's Transactions executed with errors.
      totalTransactionDurationAverage:
        type: number
        format: float
        description: >-
          Average time in seconds for all Transactions of the scenario to be
          executed.
      totalTransactionCountPerSecond:
        type: number
        format: float
        description: Total number of the scenario's Transactions executed per second.
      totalIterationCountSuccess:
        type: integer
        format: int64
        description: >-
          Total number of times when the 'Actions' Container was run for each
          Virtual User without encountering any error.
      totalIterationCountFailure:
        type: integer
        format: int64
        description: >-
          Total number of times when the 'Actions' Container was run for each
          Virtual User and encountered an error.
      totalGlobalDownloadedBytes:
        type: integer
        format: int64
        description: Total size of http traffic received in bytes.
      totalGlobalDownloadedBytesPerSecond:
        type: number
        format: float
        description: Average size of http traffic received in bytes per second.
      totalGlobalCountFailure:
        type: integer
        format: int64
        description: ''
      lastRequestCountPerSecond:
        type: number
        format: float
        description: >-
          Last value received for the number of requests in the scenario that
          are performed per second.
      lastTransactionDurationAverage:
        type: number
        format: float
        description: >-
          Last value received for the average time in milliseconds for all
          Transactions of the scenario.
      lastVirtualUserCount:
        type: integer
        format: int32
        description: >-
          Last value received for the total number of Virtual Users executed in
          the test.
  ElementDefinitions:
    type: array
    items:
      $ref: "#/definitions/ElementDefinition"
  ElementDefinition:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the element.
        name:
          type: string
          description: Name of the element.
        path:
          type: array
          description: Full path of the element including the element itself.
          items:
            type: string
        type:
          type: string
          description: Type of the element.
  ElementValues:
    type: object
    properties:
      count:
        type: integer
        format: int64
        description: ''
      elementPerSecond:
        type: number
        format: float
        description: ''
      minDuration:
        type: integer
        format: int64
        description: ''
      maxDuration:
        type: integer
        format: int64
        description: ''
      sumDuration:
        type: integer
        format: int64
        description: ''
      avgDuration:
        type: number
        format: float
        description: ''
      minTTFB:
        type: integer
        format: int64
        description: ''
      maxTTFB:
        type: integer
        format: int64
        description: ''
      sumTTFB:
        type: integer
        format: int64
        description: ''
      avgTTFB:
        type: number
        format: float
        description: ''
      sumDownloadedBytes:
        type: integer
        format: int64
        description: ''
      downloadedBytesPerSecond:
        type: number
        format: float
        description: ''
      successCount:
        type: integer
        format: int64
        description: ''
      successPerSecond:
        type: number
        format: float
        description: ''
      successRate:
        type: number
        format: float
        description: ''
      failureCount:
        type: integer
        format: int64
        description: ''
      failurePerSecond:
        type: number
        format: float
      failureRate:
        type: number
        format: float
  Points:
    type: array
    items:
      $ref: '#/definitions/Point'
  Point:
    type: object
    properties:
      offset:
        type: integer
        format: int64
        description: ''
      value:
        type: number
        format: float
        description: ''
  CounterDefinition:
    type: object
    properties:
      id:
        type: string
        description: Unique identifier of the counter.
      name:
        type: string
        description: Name of the counter.
      path:
        type: array
        description: Full path of the counter including the counter itself.
        items:
          type: string
  CounterValues:
    type: object
    properties:
      count:
        type: integer
        format: int64
        description: ''
      min:
        type: integer
        format: int64
        description: ''
      max:
        type: integer
        format: int64
        description: ''
      sum:
        type: integer
        format: int64
        description: ''
      avg:
        type: number
        format: float
        description: ''
  Error:
    type: object
    properties:
      code:
        type: integer
      message:
        type: string
  ArrayOfTestDefinition:
    type: array
    items:
      $ref: '#/definitions/TestDefinition'
